{"version":3,"sources":["logo.svg","components/header.js","utils/API.js","components/employeeList.js","components/employeeSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","style","backgroundColor","color","fontSize","axios","get","EmployeeList","props","firstName","lastName","uuid","gender","email","age","EmployeeSearch","useState","employee","setEmployee","search","setSearch","filteredEmployee","setFilterdEmployee","sort","setShort","sortedEmployee","setSortedEmployee","useEffect","console","log","setEmployeeData","length","API","then","response","data","results","catch","err","forEach","element","name","first","toLowerCase","indexOf","push","shortName","a","document","getElementById","innerHTML","b","className","textAlign","type","value","onChange","e","target","placeholder","required","cursor","onClick","id","map","ele","last","login","dob","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a57e30f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst Header=()=>{\r\n    return(\r\n        <div style={{backgroundColor:\"blueviolet\"}}>\r\n            <span style={{color:\"white\",fontSize:\"50px\"}}>Employee Directory</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nexport default {\r\n    getEmployeeList:function(){\r\n   // let empData=[]\r\n   return(axios.get(\"https://randomuser.me/api/?results=15\"));\r\n          \r\n}\r\n  \r\n}\r\n","import React from 'react';\r\n\r\nconst EmployeeList=(props)=>{\r\n  //  console.log(props.firstName)\r\nreturn(\r\n    <tr>\r\n        <td>\r\n            {props.firstName}\r\n        </td>\r\n        <td>\r\n            {props.lastName}\r\n        </td>\r\n        <td>\r\n            {props.uuid}\r\n        </td>\r\n        <td>\r\n            {props.gender}\r\n        </td>\r\n        <td>\r\n            {props.email}\r\n        </td>\r\n        <td>\r\n            {props.age}\r\n        </td>\r\n    </tr>\r\n)\r\n}\r\n\r\nexport default EmployeeList;","import React, { useState, useEffect } from 'react';\r\nimport API from '../utils/API';\r\nimport EmployeeList from '../components/employeeList';\r\nconst EmployeeSearch = () => {\r\n    const [employee, setEmployee] = useState([]);\r\n    const [search, setSearch] = useState();\r\n    const [filteredEmployee, setFilterdEmployee] = useState([]);\r\n    const [sort, setShort] = useState('asc');\r\n    const [sortedEmployee,setSortedEmployee]=useState([]);\r\n    useEffect(() => {       \r\n        console.log(\"the value of search\"+search)\r\n        if (search || search===\"\") {\r\n            setEmployeeData();\r\n            return;\r\n        }\r\n        else if(sortedEmployee.length!=0)\r\n        {\r\n            setEmployee(sortedEmployee);\r\n            return;\r\n        }\r\n        else {\r\n            API.getEmployeeList()\r\n                .then((response) => {\r\n                    setEmployee(response.data.results);\r\n                    setFilterdEmployee(response.data.results);\r\n                })\r\n                .catch(err => (console.log(err)))\r\n        }\r\n    }, [search],[sortedEmployee])\r\n\r\n    const setEmployeeData = () => {\r\n        let data = [];\r\n             \r\n        if(search!=\"\")\r\n        {\r\n        employee.forEach(element => {\r\n            if (element.name.first.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n                data.push(element);\r\n            }\r\n\r\n        });\r\n        setFilterdEmployee(data);\r\n        \r\n    }\r\n    else\r\n    {   console.log(employee);\r\n        setFilterdEmployee(employee);\r\n    }\r\n    \r\n    }\r\n\r\n    const shortName =async () => {\r\n\r\n        if (sort === 'asc') \r\n        {\r\n            setShort('desc');\r\n            document.getElementById(\"sortEmp\").innerHTML=\"\";\r\n           document.getElementById(\"sortEmp\").innerHTML=\"<i class='fa fa-sort-desc'></i>\";\r\n          const data=await  filteredEmployee.sort(function (a, b) {\r\n                if (a.name.first < b.name.first) {\r\n                    return -1;\r\n                } \r\n                else {\r\n                    return 1;\r\n                }\r\n\r\n            })\r\n        setSortedEmployee(data);\r\n        }\r\n        else {\r\n            setShort('asc')\r\n            document.getElementById(\"sortEmp\").innerHTML=\"\";\r\n           document.getElementById(\"sortEmp\").innerHTML=\"<i class='fa fa-sort-asc'></i>\";\r\n            const data=await  filteredEmployee.sort(function (a, b) {\r\n                if (a.name.first > b.name.first) {\r\n                    return -1;\r\n                } \r\n                else {\r\n                    return 1;\r\n                }\r\n\r\n            })\r\n        setSortedEmployee(data);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <input type=\"text\" value={search} onChange={(e)=>{setSearch(e.target.value)}} placeholder=\"Enter first Name\" required></input>\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{cursor:\"pointer\"}}>\r\n                                <div>First Name\r\n                                <span onClick={shortName} id=\"sortEmp\"><i className=\"fa fa-sort-asc\"></i></span>\r\n                                   </div> \r\n                        </th>\r\n                            <th>\r\n                                Last Name\r\n                        </th>\r\n                            <th>\r\n                                UID\r\n                        </th>\r\n                            <th>\r\n                                Gender\r\n                        </th>\r\n                            <th>\r\n                                Email\r\n                        </th>\r\n                            <th>\r\n                                Age\r\n                        </th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            filteredEmployee.map(ele => <EmployeeList key={ele.login.uuid} firstName={ele.name.first} lastName={ele.name.last} uuid={ele.login.uuid} gender={ele.gender} email={ele.email} age={ele.dob.age} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EmployeeSearch;","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header'\nimport EmployeeSearch from './components/employeeSearch';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <br></br>\n      <EmployeeSearch/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}